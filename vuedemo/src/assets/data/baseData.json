[
	{
		"id": 1,
		"name":"1.Boolean类型",
		"function": "Boolean()转型函数",
		"content": "只有两个字面量，true和false区分大小写，在ECMAScript中所有类型的值都有与这两个Boolean值等价的值。",
		"say":"Boolean()：哈哈，只要你是存在的，我都能揉吧揉吧把你变成我的true或false哟~~，例如：流控制语（如：if）句自动执行我的Boolean()转型函数的转换，变成我的true或者false。",
		"es6": 0
	},
	{
		"id": 2,
		"name": "2.Undefined类型",
		"function": 0,
		"content": "只有一个值，即特殊的undefined，在声明变量的时候，没有对其初始化时，这个变量的值就是undefined。",
		"say": "Undefined: 我把所有的爱都给了我的唯一的爱子undefined ^_^",
		"children": 0,
		"es6": 0
	},
	{
		"id": 3,
		"name": "3.Null类型",
		"function": 0,
		"content": "只有一个特殊值是null，从逻辑角度看null表示一个空对象指针，如果定义的变量将来保存对象，最好将其初始化为null。",
		"say": "Null：正如你所见，我和undefined一样，我把我所有的爱都给了null，他就是我的唯一爱子 ^_^",
		"children": 0,
		"es6": 0
	},
	{
		"id": 4,
		"name": "4.Number类型",
		"function": "isFinite()；isNaN()函数；将非数值转换为数值的函数：①.Number()，②.parseInt()，③.parseFloat()。",
		"content": "Number类型分为整数和浮点数。最基本的字面量格式是十进制整数，八进制的字面量在严格模式下是无效的，十六进制字面量值的前两位必须是0x；浮点数值就是该数值中必须包含一个小数点。",
		"say": "Number()：我一共有两个孩子，分别是整数和浮点数，他们又有3种技能：Number()，parseInt()和parseFloat()，还有另外两个方法分别是：isFinite()、isNaN()。记住这些方法和技能都是全局的哟~~",
		"children": [
			{
				"id": "041",
				"name": "isFinite()",
				"say": "一个数值经过我这里，我就可以知道他是不是有穷的数值哟~，可以通过Number.MIN_VALUE和Number.MAX_VALUE分别来获取ECMAScript能够表示的最小和最大值哟~"
			},
			{
				"id": "042",
				"name": "isNaN()",
				"say": "我的功能是判断是不是数值；其中NaN表示的不是数值（他是一种神奇的类型），涉及到的任何和NaN相关的操作都为NaN，而且NaN与任何值都不相等，就连他本身也不相等哟~"
			},
			{
				"id": "043",
				"name": "Number()转型函数",
				"say": "Number()我可以用于任何数据类型，如果是自家孩子以及带了引号的“自己孩子”，都是怎么进来，怎么出去；对于Boolean值转为1或者0；null的值为0；undefined的时候就为NaN呦~~除此之外的都要变成NaN。"
			},
			{
				"id": "044",
				"name": "parseInt()",
				"say": "处理整数的时候记得找我哟，我在处理字符串的时候，看他是否符合数值的模式，我会忽略字符串前面的空格，直到我遇到第一个非空字符串，如果第一个字符串不是数字或者负号，他就会被我变成NaN（空字符串也是NaN）；如果第一个字符是数字字符，我会继续解析第二个字符，直到解析完后续所有字符或者遇到一个非数字字符就停止（例如'123ww'输出123）。如果字符串的一个字符是数字字符，我也能够识别出各种整数格式（八进制，十六进制），此时你可以告诉我你需要转换的进制数（基数），不然不会得到你想要的结果哟~~（结果可能是NaN）"
			},
			{
				"id": "045",
				"name": "parseFloat()",
				"say": "我会从第一个字符开始解析每一个字符，而且也是解析到字符串末尾，或者解析到遇见一个无效的浮点数字字符为止，记得现在是浮点数，所以字符串中的第一个小数点是有效的，当然啦第二个小数点就是无效的啦~我只会解析十进制的数字字符串哟，所以不存在基数啦，十六进制的字符串会被转换成0；如果没有小数点，或者小数点后面都是零，我会返回整数的~这是为了节省内存，浮点数占用的内存是整数的两倍~~"
			}
		],
		"es6": "我的es5的函数都是全局的，到来es6的时候我的方法都乖乖的放在了Number对象上哟，请看：Number.isFinite()、Number.isNaN()、Number.parseInt()、Number.parseFloat()，这样做是为了减少全局性方法，使得语言逐步模块。"
	},
	{
		"id": 5,
		"name": "5.String类型",
		"function": "toString()，String()",
		"content": "String类型是由零个或多个16位Unicode字符组成的字符序列，包含一些特殊的字符字面量，也叫做转义字符（如：换行，制表符、回车、空格），他们可以出现在字符串的任意位置，将会被作为一个字符来解析；字符串一旦创建就不能修改，对字符串的操作之后，只能返回一个新的字符串，",
		"say": "因为我至始至终是不会变化的，所以不要渴望在我身上添加任何的东西，不然你会失望的~当然啦我可以使用String的基本包装类型上的所有方法"
	}
]